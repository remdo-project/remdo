name: Playwright Browser Tests

on:
  workflow_call:
    inputs:
      command:
        description: Command to execute Playwright suite
        required: true
        type: string
      websocket:
        description: Start the collab websocket server before running tests
        default: false
        type: boolean

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      report_present: ${{ steps.report.outputs.present }}
      slug: ${{ steps.branch.outputs.slug }}
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-node@v5
        with:
          node-version: 22

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

      - name: Install Playwright (Chromium)
        run: npx playwright install --with-deps chromium

      - name: Start websocket server
        if: ${{ inputs.websocket }}
        run: |
          set -euo pipefail
          npm run websocket &
          echo "WEBSOCKET_PID=$!" >>"$GITHUB_ENV"
          npx wait-on --timeout 1000 tcp:127.0.0.1:8080

      - name: Run Playwright tests
        id: run-tests
        continue-on-error: true
        run: ${{ inputs.command }}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: data
          path: data/
          retention-days: 30

      - name: Check for Playwright report
        id: report
        if: always()
        run: |
          if [ -f data/playwright-report/index.html ]; then
            echo "present=true" >>"$GITHUB_OUTPUT"
          else
            echo "present=false" >>"$GITHUB_OUTPUT"
          fi

      - name: Compute branch slug
        id: branch
        if: always()
        run: |
          ref_name="${GITHUB_REF_NAME:-${GITHUB_REF##*/}}"
          slug=$(echo "$ref_name" | tr '[:upper:]' '[:lower:]' | sed -E 's/[^a-z0-9]+/-/g' | sed -E 's/^-+|-+$//g')
          if [ -z "$slug" ]; then
            slug="branch"
          fi
          echo "slug=$slug" >>"$GITHUB_OUTPUT"

      - name: Capture Playwright failure
        if: ${{ steps.run-tests.outcome == 'failure' }}
        run: exit 1

      - name: Stop websocket server
        if: ${{ always() && inputs.websocket }}
        run: |
          set -euo pipefail
          if [ -n "${WEBSOCKET_PID:-}" ] && kill -0 "$WEBSOCKET_PID" 2>/dev/null; then
            kill "$WEBSOCKET_PID"
            wait "$WEBSOCKET_PID" || true
          fi
