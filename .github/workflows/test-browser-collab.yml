name: Tests/Browser/Collab

on:
  push:
  workflow_dispatch:

permissions:
  actions: read
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages-${{ github.ref }}
  cancel-in-progress: false

jobs:
  run:
    runs-on: ubuntu-latest
    outputs:
      report_present: ${{ steps.playwright.outputs.report_present }}
      slug: ${{ steps.playwright.outputs.slug }}
    steps:
      - uses: actions/checkout@v5

      - name: Run Playwright suite
        id: playwright
        uses: ./.github/actions/test-browser-shared
        with:
          command: npm run test-browser-collab

  prepare-pages:
    if: ${{ always() && needs.run.outputs.report_present == 'true' && (github.ref_name == 'main' || startsWith(github.ref_name, 'codex/')) }}
    needs: run
    runs-on: ubuntu-latest
    env:
      BRANCH_SLUG: ${{ needs.run.outputs.slug }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Download test artifacts
        uses: actions/download-artifact@v4
        with:
          name: data
          path: data

      - name: Fetch existing GitHub Pages content
        run: |
          set -euo pipefail
          if git ls-remote --exit-code origin gh-pages &>/dev/null; then
            git fetch origin gh-pages:gh-pages
            git worktree add gh-pages-source gh-pages
          fi

      - name: Prepare Pages artifact
        run: |
          set -euo pipefail
          mkdir -p pages/branches
          if [ -d gh-pages-source ]; then
            rsync -a --delete --exclude '.git' gh-pages-source/ pages/
          fi
          rm -rf pages/playwright-report
          rm -rf "pages/branches/${BRANCH_SLUG}"
          mv data/playwright-report "pages/branches/${BRANCH_SLUG}"
          cd pages/branches
          ls -1t | tail -n +21 | xargs -r rm -rf
          cd ../..

      - name: Upload Playwright report to GitHub Pages
        uses: actions/upload-pages-artifact@v4
        with:
          path: pages

  deploy:
    if: ${{ needs.prepare-pages.result == 'success' }}
    needs:
      - run
      - prepare-pages
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ format('{0}branches/{1}/', steps.deployment.outputs.page_url, needs.run.outputs.slug) }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      - name: Log report location
        env:
          REPORT_URL: ${{ format('{0}branches/{1}/', steps.deployment.outputs.page_url, needs.run.outputs.slug) }}
          BRANCH_SLUG: ${{ needs.run.outputs.slug }}
        run: |
          set -euo pipefail
          echo "Playwright report for branch '${BRANCH_SLUG}' available at: ${REPORT_URL}"
